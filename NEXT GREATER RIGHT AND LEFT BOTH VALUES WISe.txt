//NEXT GREATER RIGHT AND LEFT BOTH VALUES WISE

class MyStack{
    public static int[] nextGreaterToRight(int arr[],int n){
        //looking for their next Greater ele to right
        int ngeri[]=new int[n];
        Stack<Integer> st=new Stack<>();
        st.push(arr[n-1]);

        ngeri[n-1]=-1;
        //right->left
        for(int i=n-2;i>=0;i--){
            int ele=arr[i];
            while(st.size()>0 && ele>=st.peek()){
                st.pop();
            }
            if(st.size()==0){
                ngeri[i]=-1;
            }
            else{
                ngeri[i]=st.peek();
            }
            st.push(ele);
        }
        return ngeri;
    }

    public static int[] nextGreaterToLeft(int arr[],int n){
        //looking for their next Greater ele to right
        int ngeri[]=new int[n];
        Stack<Integer> st=new Stack<>();
        st.push(arr[0]);

        ngeri[0]=-1;
        for(int i=1;i<n;i++){
            int ele=arr[i];
            while(st.size()>0 && ele>=st.peek()){
                st.pop();
            }
            if(st.size()==0){
                ngeri[i]=-1;
            }
            else{
                ngeri[i]=st.peek();
            }
            st.push(ele);
        }
        return ngeri;
    }

     public static void main(String...args){
        int arr[]={2,9,4,7,1,6,8};
        int n=arr.length;

        int ngeri[]=nextGreaterToRight(arr,n);
        for(int i:ngeri){
            System.out.print(i+" ");
        }
        System.out.println();
        int ngele[]=nextGreaterToLeft(arr,n);
        for(int i:ngele){
            System.out.print(i+" ");
        }
    }
}
